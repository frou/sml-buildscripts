#!/bin/bash
#
# polyrepl - load a SML program defined in a MLB file into the Poly/ML
# interactive environment
#
# Chris Cannam, 2015-2022. MIT licence

set -e

usage() {
    me=$(basename "$0")
    echo 1>&2
    echo "$me: Load a SML program defined in a MLB file into the Poly/ML repl" 1>&2
    echo 1>&2
    echo "Usage: $me [-d] file.sml" 1>&2
    echo "       $me [-u] [-d] file.mlb" 1>&2
    echo "where" 1>&2
    echo "   -u: Unique: \"use\" each file only once, regardless of how many times it" 1>&2
    echo "       appears in the MLB file. See \"polybuild\" for discussion." 1>&2
    echo "   -d: Enable Poly/ML compiler debug mode before reading SML source." 1>&2
    echo 1>&2
    exit 2
}

unique_arg=""
if [ "$1" = "-u" ]; then
    unique_arg="-u"
    shift
fi

debug=no
if [ "$1" = "-d" ]; then
    debug=yes
    shift
fi

arg="$1"

if [ -z "$arg" ]; then
    usage
fi

shift
set -u

mydir=$(dirname "$0")
. "$mydir/smlbuild-include.sh"

out=$(get_outfile "$arg")  # we don't use this, but it does some arg error checking

RLWRAP_FLAGS="--prompt=magenta --wait-before-prompt -40 --remember --complete-filenames"

if [ "$debug" = "yes" ]; then
    rlwrap $RLWRAP_FLAGS poly --eval 'PolyML.Compiler.debug := true;' $(expand_arg $unique_arg "$arg" | sed 's/^\(.*\)$/--use \1/') --eval '"Entering trace mode; evaluate `PolyML.Debug.trace false` to leave";' --eval 'PolyML.Debug.trace true;'
else
    rlwrap $RLWRAP_FLAGS poly $(expand_arg -u "$arg" | sed 's/^\(.*\)$/--use \1/')
fi


